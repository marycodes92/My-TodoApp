{"version":3,"sources":["Lists.js","App.js","reportWebVitals.js","index.js"],"names":["Lists","props","itemsList","inputs","map","item","className","type","id","key","value","text","onChange","event","update","target","icon","onClick","trashItem","library","add","faTrash","faEdit","Title","state","items","currentText","inputHandler","bind","addText","a","this","setState","Date","now","preventDefault","newText","console","log","newInput","selectItem","filter","newTodo","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SA6BeA,MAzBf,SAAeC,GACX,IACMC,EADSD,EAAME,OACIC,KAAI,SAACC,GAC1B,OAAO,qBAAKC,UAAU,QAAf,SACH,8BACI,uBACAC,KAAK,OACLC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SACI,SAACC,GACGZ,EAAMa,OAAOD,EAAME,OAAOL,MAAOL,EAAKI,QAGlD,sBAAMH,UAAU,QAAhB,SACI,cAAC,IAAD,CAAiBA,UAAU,YAAYU,KAAK,QAAQC,QAAS,kBAAKhB,EAAMiB,UAAUb,EAAKI,cAZ5DJ,EAAKI,QAiB5C,OACI,gCAAMP,EAAN,Q,cCjBRiB,IAAQC,IAAIC,KACZF,IAAQC,IAAIE,K,IAiFGC,E,kDA9Eb,WAAYtB,GAAO,IAAD,8BAChB,cAAMA,IACDuB,MAAQ,CACXC,MAAO,GACPC,YAAa,CACXf,KAAM,GACNF,IAAK,KAGT,EAAKkB,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,UAAY,EAAKA,UAAUU,KAAf,gBACjB,EAAKd,OAAS,EAAKA,OAAOc,KAAZ,gBAZE,E,gDAelB,SAAaE,GACXC,KAAKC,SAAS,CACZN,YAAY,CACVf,KAAMmB,EAAEf,OAAOL,MACfD,IAAKwB,KAAKC,W,qBAKhB,SAAQJ,GACNA,EAAEK,iBACF,IAAMC,EAAUL,KAAKP,MAAME,YAC3B,GAAGU,EAAQ,CACTC,QAAQC,IAAIF,EAAQzB,MAEpB,IAAM4B,EAAQ,sBAAOR,KAAKP,MAAMC,OAAlB,CAAyBW,IACvCC,QAAQC,IAAIC,GACZR,KAAKC,SAAS,CACZP,MAAOc,EACPb,YAAY,CACVf,KAAM,GACNF,IAAK,S,uBAMb,SAAUA,GACR,IAAM+B,EAAaT,KAAKP,MAAMC,MAAMgB,QAAO,SAACpC,GAAD,OAC3CA,EAAKI,MAAMA,KACXsB,KAAKC,SAAS,CACZP,MAAOe,M,oBAIX,SAAO7B,EAAMF,GACX,IAAMiC,EAAUX,KAAKP,MAAMC,MAC3BiB,EAAQtC,KAAI,SAAAC,GACPA,EAAKI,MAAQA,IACdJ,EAAKM,KAAOA,MAGhBoB,KAAKC,SAAS,CACZU,QAASA,M,oBAIb,WACE,OACE,sBAAKpC,UAAU,OAAf,UACE,iCACE,uBAAMA,UAAU,aAAaqC,SAAUZ,KAAKF,QAA5C,UACE,uBAAOtB,KAAK,OAAOqC,YAAY,kBAC/BlC,MAAOqB,KAAKP,MAAME,YAAYf,KAC9BC,SAAUmB,KAAKJ,eACnB,wBAAQpB,KAAK,SAAb,oBAGA,cAAC,EAAD,CAAOJ,OAAU4B,KAAKP,MAAMC,MAAOP,UAAYa,KAAKb,UAAWJ,OAASiB,KAAKjB,gB,GA1EjE+B,IAAMC,WCCXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fac0b4d3.chunk.js","sourcesContent":["import React from 'react';\nimport './Lists.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction Lists(props){\n    const inputs = props.inputs;\n    const itemsList = inputs.map((item)=>{\n        return <div className=\"items\" key={item.key}>\n            <p>\n                <input \n                type=\"text\"\n                id={item.key}\n                value={item.text}\n                onChange = {\n                    (event) => {\n                        props.update(event.target.value, item.key)\n                    } \n                }/>\n            <span className=\"span2\">\n                <FontAwesomeIcon className=\"trashIcon\" icon='trash' onClick={()=> props.trashItem(item.key)}/>\n            </span>\n            </p>\n        </div>\n    })\n    return (\n        <div>{itemsList} </div>\n    )\n}\n\nexport default Lists;\n\n","/* eslint-disable array-callback-return */\nimport React from 'react';\nimport './App.css';\nimport Lists from './Lists'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash);\nlibrary.add(faEdit);\n\nclass Title extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      items: [],\n      currentText: {\n        text: \"\",\n        key: \"\",\n      },\n    }\n    this.inputHandler = this.inputHandler.bind(this);\n    this.addText = this.addText.bind(this);\n    this.trashItem = this.trashItem.bind(this);\n    this.update = this.update.bind(this);\n  }\n  \n  inputHandler(a){\n    this.setState({\n      currentText:{\n        text: a.target.value,\n        key: Date.now()\n      }\n    });\n  } \n\n  addText(a){\n    a.preventDefault();\n    const newText = this.state.currentText; \n    if(newText){\n      console.log(newText.text);\n      // eslint-disable-next-line no-use-before-define\n      const newInput = [...this.state.items, newText];\n      console.log(newInput)\n      this.setState({\n        items: newInput,\n        currentText:{\n          text: \"\",\n          key: \"\"\n        }\n      })\n    }\n  }\n\n  trashItem(key){\n    const selectItem = this.state.items.filter((item) => \n    item.key!==key)\n    this.setState({\n      items: selectItem\n    })\n  }\n\n  update(text, key){\n    const newTodo = this.state.items\n    newTodo.map(item =>{\n      if(item.key === key){\n        item.text = text\n      }\n    })\n    this.setState({\n      newTodo: newTodo\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"todo\">\n        <header>\n          <form className=\"to-do-form\" onSubmit={this.addText}>\n            <input type=\"text\" placeholder=\"Enter todo text\" \n            value={this.state.currentText.text} \n            onChange={this.inputHandler}/>\n        <button type=\"submit\">+</button>\n          </form>\n        </header>\n        <Lists inputs = {this.state.items} trashItem= {this.trashItem} update= {this.update}></Lists>\n      </div>\n    );\n  }\n}\nexport default Title;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}